version: "3.3"

services:

  back:
    build: ./docker/images/back
    container_name: back
    restart: unless-stopped
    tty: true
    ports:
      - "80:80"
      - "443:443"
      - "3000"
    volumes:
      - ./public:/var/www
      - ./docker/config/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/config/nginx/vhost.conf:/etc/nginx/conf.d/vhost.conf
    network_mode: host

  redis:
    image: redis:6.0.9-alpine
    container_name: redis
    restart: always
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - redisdata:/var/lib/redis
      - ./docker/config/redis/redis.conf:/usr/local/etc/redis/redis.conf
    ports:
      - ${REDIS_PORT_IN_OUT}

  #MariaDB Service
  db:
    image: mariadb
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - ${MYSQL_PORT_IN_OUT}
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
#      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - dbdata:/var/lib/mysql
      - ./docker/config/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - app-network

volumes:
  logvolume01: { }

  dbdata:
    driver: local

  redisdata:
    driver: local

#Docker Networks
networks:
  app-network:
    driver: bridge
